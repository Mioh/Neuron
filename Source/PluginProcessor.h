/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "ModulatedDelayUnit.h"
#include "DelayUnit.h"

typedef OwnedArray<ModulatedDelayUnit> DelayArray;

//==============================================================================
class ApdelayAudioProcessor  : public AudioProcessor
{
    DelayArray m_leftDelay, m_rightDelay;
    int m_numberOfDelays, m_maxNumberOfDelays;
    float m_leftDelayMS,m_rightDelayMS, m_leftFeedback,m_rightFeedback,
    m_samplerate, m_wet, m_depth;
public:
    
    enum Parameters{
        LeftDelayTimeMS = 0,
        RightDelayTimeMS,
        LeftFeedback,
        RightFeedback,
        DryWet,
        nUnits,
        NumberOfParameters
    };
    
    //==============================================================================
    ApdelayAudioProcessor();
    ~ApdelayAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    int getNumParameters() override;
    float getParameter (int index) override;
    void setParameter (int index, float newValue) override;

    const String getParameterName (int index) override;
    const String getParameterText (int index) override;

    const String getInputChannelName (int channelIndex) const override;
    const String getOutputChannelName (int channelIndex) const override;
    bool isInputChannelStereoPair (int index) const override;
    bool isOutputChannelStereoPair (int index) const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

private:
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (ApdelayAudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
